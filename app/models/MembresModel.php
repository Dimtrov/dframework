<?php 
/**
 * MembresModel
 *
 * Generated by dFramework v3.2.2
 * Date : Thu, 24 Dec 2020 23:33:25 +0000
 * PHP Version : 7.2.19
 * Model : Membres
 */
class MembresModel extends dFramework\core\Model
{
	/**
	 * Ajoute 1 membre dans la base de donnés
	 *
	 * @param array $data
	 * @return int|null
	 */
	public function create(array $data): ?int
	{
		$this->from('membres')
			->insert($data);

		return $this->lastId('membres');
	}


	/**
	 * Selectionne toutes les données de la table membres
	 *
	 * @param bool $hydrate
	 * @return stdClass[]|MembresEntity[]
	 */
	public function read(bool $hydrate = false): array
	{
		return $this->select()
			->from('membres')
			->all($hydrate ? MembresEntity::class : null);
	}


	/**
	 * Recupère les informations rélative à 1 membre
	 *
	 * @param mixed $id_membre
	 * @param bool $hydrate
	 * @return stdClass|MembresEntity
	 */
	public function read_pk($id_membre, bool $hydrate = false): ?object
	{
		return $this->select()
			->from('membres')
			->where('id_membre', $id_membre)
			->one($hydrate ? MembresEntity::class : null);
	}


	/**
	 * Selectionne les données de la table membres par lots
	 *
	 * @param int $limit
	 * @param int $offset
	 * @param bool $hydrate
	 * @return stdClass[]|MembresEntity[]
	 */
	public function read_limit(int $limit, int $offset = 0, bool $hydrate = false): array
	{
		return $this->select()
			->from('membres')
			->limit($limit, $offset)
			->all($hydrate ? MembresEntity::class : null);
	}


	/**
	 * Modifie les données rélatives à 1 enregistrement dans la table membres
	 *
	 * @param mixed $id_membre
	 * @param array $data
	 * @return void
	 */
	public function edit($id_membre, array $data)
	{
		$this->from('membres')
			->where('id_membre', $id_membre)
			->update($data);
	}


	/**
	 * Modifie toutes les données de la table membres
	 *
	 * @param array $membre_infos
	 * @return void
	 */
	public function refactor(array $data)
	{
		$this->from('membres')
			->update($data);
	}


	/**
	 * Supprime 1 membre de la base de données
	 *
	 * @param mixed $id_membre
	 * @return void
	 */
	public function remove($id_membre)
	{
		$this->from('membres')
			->where('id_membre', $id_membre)
			->delete();
	}


	/**
	 * Supprime tous les éléments de la table membres
	 *
	 * @return void
	 */
	public function clear()
	{
		$this->from('membres')
			->delete();
	}


	/**
	 * Vide la table membres
	 *
	 * @return void
	 */
	public function clean()
	{
		$this->truncate('membres');
	}


	/**
	 * Compte tous les enregistrements de la table membres
	 *
	 * @param array $enreg
	 * @return int
	 */
	public function count_membres(array $enreg = []): int
	{
		$this->from('membres');
		foreach ($enreg as $key => $value) {
			$this->where($key, $value);
		}
		return $this->count();
	}
}
